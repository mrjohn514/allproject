sending mails to users when they do post or comments 

steps to achieve this feature in project :
step 1:  first  need module nodemailer
step 2 : setting cofig for this nodemailer
step 3 : setting up mailer file (function to sends mails )
step 4 : setting templates for mail content(sending mails with html content with background color etc)




starting...

step 1 installing nodemailer in project 
npm install nodemailer 


step 2: creating config file for nodemailer setup nodemailer.js in cofin
//requiring nodemailer 
const nodeMailer= require('nodemailer');

//need ejs render the template which sent in email
const ejs=require('ejs');

const path=require('path');

// transport is a transport object created from the  nodemailer.createTransport method

//nodemailer.createTransport(type, options) where type indicates transport protocol used 
//and options define how it is used 

let transporter =nodeMailer.createTransport({

//seting up smtp options on how it is used 

service:'gamil',  //) option to auto-configure host, port and secure connection settings
host:'smtp.gmail.com',                 //hostname of the SMTP server
port:587,                       //port of the SMTP server

//secureConnection - use SSL (default is false , not needed with service ). If
//you're using port 587 then keep secureConnection false, since the connection is
//started in insecure plain text mode and only later upgraded with STARTTLS

secure:false,

//you have to establish the identity with which you are sendin emails 
//if u dont do this anyone could use gmail to send mail from anyone to anyone (to stop spamming / to charge if sending more mails/day) 
auth:{                             //auth - authentication object as {user:"...", pass:"..."} 
user:'barwal7861@gmail.com',
pass:'B@rwal78!'                   //need app password generated by google 

}


})

///////////step 2 let render template  so we want to define we will be using ejs and template rendring engine

//data to put in ejs file like to put username of email body 
//,relativepath from where mail is being sent  
let renderTemplate =(data,relativePath)=>{          
            
//creating var which conatina all the html which is sent in email     
let mailHtml;

//we are goin to use ejs to render that template and send it just like  it renders the views 

ejs.renderFile(

//path of place from where to render template  
//relateivePath is the path from where this function is called  renderTemplate() funciton
//side by side creating mailer folder in views 
path.join(__dirname,'../views/mailers',relativePath),

//this is data we pass to ejs file like we pass post in homecontroller to home.ejs and able to write <%post.user%>
data,

//callback funtion
function(err,template){
     if(err){console.log("erro in rendring",err);return}

     mailHtml=template; 
}
)
return mailHtml;
}
module.exports={
    transporter:transporter,
    renderTemplate:renderTemplate
}



step 3: creating mailer file so create folder mailers inside main then create a file 
comment_mailer.js  so all comment related mails will be put up from here 
//this file wil have funciton to send emails 

const nodeMailer=require('../config/nodemailer');


//now i need to create funciton which will send the mail 

            //--instad of exporting likethis ..
// newcomment =function(){};
// module.exports=newcomment;


exports.newComment= (comment)=>{                  //comment recieve from comment controller when comment created 
                                                 //we  call this function from there

console.log("inside new commentmailer",comment);

//calling preddefinde fucntion sendMail using object we created in config file transprte
nodeMailer.transporter.sendMail({

from:'mrjohn7861@gmail.com',                                // The e-mail address of the sender.
to:comment.user.email,                                      //email address of reciver here( to user who have commenteed)
subject:'newcomment published',                             //subject of email
html:'<h1>youp uour comment published</h1>'                 //body of the email sent 

},
// //info caries int info about req that has been sent mail sent succes ,fail
(err,info)=>{
if(err){console.log("errro in sending mail",err);return;}

console.log("message send",info);
return;

})

}



//----------------------------------------------------------------------------
//info look like this 
// message send {
//     accepted: [ 'mrjohn7861@gmail.com' ],
//     rejected: [],
//     envelopeTime: 1022,
//     messageTime: 816,
//     messageSize: 321,
//     response: '250 2.0.0 OK  1655028317 o6-20020a056a001bc600b0051c66160a3asm2923872pfw.181 - gsmtp',
//     envelope: { from: 'mrjohn7861@gmail.com', to: [ 'mrjohn7861@gmail.com' ] },
//     messageId: '<0ae8fa3a-6504-8878-cb09-05307265f5c8@gmail.com>'
//   }




step 5 : calling above fucntion from controller of comment when a comment is created 

  comment = await comment.populate("user");  
  //we just put it outside because we want to populate even
 //if the req is not xhr it will populate every time irerespective of req


    //callling new comment  and passing comment created 
    commentMailer.newComment(comment)  ;



---------------------------------------------------------------------------------------------------------
when u add comment with account mrjohn then when comment is created at comment controller this 
comment_mailer.newComment called with passing the comment  created with populated user 
then we reach at this fucntion from where using transporter object we call sendMail fucntion which
acutaly send the email to mrjohn from abubarwal account wiht specified html for body 
-----------------------------------------------------------------------------------------------------------